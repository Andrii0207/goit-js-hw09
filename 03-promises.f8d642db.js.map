{"mappings":"iMAKA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,eAGtBA,GAGL,SAASQ,EAAeC,GAGtB,IAFA,IAA+BC,EAAAD,EAAIE,OAArBC,GAAiBF,EAAvBG,KAAuBH,EAAjBE,MAAME,EAAWJ,EAAXI,OAEXC,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCjB,EAAc,CAAEc,OAAMZ,cACnBgB,MAAK,W,OAAMC,QAAQC,IAAK,2BACtBC,OAAI,W,OAAMF,QAAQC,IAAK,yB,+SA1BhCE,EAAA,SAEaC,SAASC,cAAc,SAC/BC,iBAAiB,UA2BtB,SAAsBd,GACpBA,EAAIe,iBACJP,QAAQC,IAAI,kCAEZ,IAAgCR,EAAAD,EAAIE,OAA5BX,EAAwBU,EAAxBV,MAAOY,EAAiBF,EAAjBE,KAAME,EAAWJ,EAAXI,OAEfW,EAAYC,OAAO1B,EAAM2B,OACzBC,EAAWF,OAAOd,EAAKe,OACvBE,EAAgBH,OAAOZ,EAAOa,OAEpCV,QAAQC,IAAIO,GACZR,QAAQC,IAAIU,GACZX,QAAQC,IAAIW,GAEZrB,EAAe,CAAEiB,YAAWG,WAAUC,qB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    });\n  }, delay);\n}\n\nfunction createPromises(evt) {\n  const { time, step, amount } = evt.target;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise({ step, delay })\n      .then(() => console.log(`✅  Fulfilled promise`))\n      .catch(() => console.log(`❌ Rejected promise`));\n  }\n}\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  console.log('submit on button CreatePromise');\n\n  const { delay, step, amount } = evt.target;\n\n  const delayTime = Number(delay.value);\n  const stepTime = Number(step.value);\n  const countPromises = Number(amount.value);\n\n  console.log(delayTime);\n  console.log(stepTime);\n  console.log(countPromises);\n\n  createPromises({ delayTime, stepTime, countPromises });\n}\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$createPromises","evt","_target","target","step","time","amount","i","then","console","log","catch","parcelRequire","document","querySelector","addEventListener","preventDefault","delayTime","Number","value","stepTime","countPromises"],"version":3,"file":"03-promises.f8d642db.js.map"}
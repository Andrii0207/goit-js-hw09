{"mappings":"oeAAAA,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EAEFF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,SAGtBA,GAGL,SAASQ,EAAeC,GACtB,MAAMC,KAAEA,EAAIC,KAAEA,EAAIC,OAAEA,GAAWH,EAAII,OAEnC,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChChB,EAAc,C,KAAEa,E,MAAMX,QACnBe,MAAK,IAAMC,QAAQC,IAAI,0BAAyBC,OAC9C,IAAIF,QAAMC,IAAQ,wBAxBdE,SAASC,cAAc,SAC/BC,iBAAiB,UA2BtB,SAAsBZ,GACpBA,EAAIa,iBACJN,QAAQC,IAAI,kCAEZ,MAAMjB,MAAEA,EAAKW,KAAEA,EAAIC,OAAEA,GAAWH,EAAII,OAE9BU,EAAYC,OAAOxB,EAAMyB,OACzBC,EAAWF,OAAOb,EAAKc,OACvBE,EAAgBH,OAAOZ,EAAOa,OAEpCT,QAAQC,IAAIM,GACZP,QAAQC,IAAIS,GACZV,QAAQC,IAAIU,GAEZnB,EAAe,C,UAAEe,E,SAAWG,E,cAAUC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    });\n  }, delay);\n}\n\nfunction createPromises(evt) {\n  const { time, step, amount } = evt.target;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise({ step, delay })\n      .then(() => console.log(`✅  Fulfilled promise`))\n      .catch(() => console.log(`❌ Rejected promise`));\n  }\n}\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  console.log('submit on button CreatePromise');\n\n  const { delay, step, amount } = evt.target;\n\n  const delayTime = Number(delay.value);\n  const stepTime = Number(step.value);\n  const countPromises = Number(amount.value);\n\n  console.log(delayTime);\n  console.log(stepTime);\n  console.log(countPromises);\n\n  createPromises({ delayTime, stepTime, countPromises });\n}\n"],"names":["parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$createPromises","evt","time","step","amount","target","i","then","console","log","catch","document","querySelector","addEventListener","preventDefault","delayTime","Number","value","stepTime","countPromises"],"version":3,"file":"03-promises.4c55429e.js.map"}
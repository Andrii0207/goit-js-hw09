{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAC/BC,iBAAiB,UAiBtB,SAAsBC,GACpBA,EAAIC,iBACJ,IAAgCC,EAAAF,EAAIG,OAA5BC,EAAwBF,EAAxBE,MAAOC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAEfC,EAAYC,OAAOJ,EAAMK,OACzBC,EAAWF,OAAOH,EAAKI,OACvBE,EAAgBH,OAAOF,EAAOG,QAKtC,SAAuBF,EAAWG,EAAUJ,GAC1C,I,kBACE,IAAIM,EAAOL,EAAYG,GAAYG,EAAI,IA5B3C,SAAuBC,EAAUV,GAC/B,OAAO,IAAIW,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEF,WAAUV,UAGpBa,EAAO,CAAEH,WAAUV,YAEpBA,OAmBHkB,CAAcT,EAAGD,GACdW,MAAK,W,OAAMC,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAiCC,OAARd,EAAE,QAAWc,OAALf,EAAK,UACvEgB,OAAI,W,OAAMJ,EAAA7B,GAAS8B,OAAOC,QAAQ,sBAA8BC,OAARd,EAAE,QAAWc,OAALf,EAAK,WALnEiB,EAAI,EAAGA,GAAKvB,EAAQuB,GAAK,EAACC,EAAAD,GAJnCE,CAAcxB,EAAWG,EAAUC,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.target;\n\n  const delayTime = Number(delay.value);\n  const stepTime = Number(step.value);\n  const countPromises = Number(amount.value);\n\n  buildPromises(delayTime, stepTime, countPromises);\n}\n\nfunction buildPromises(delayTime, stepTime, amount) {\n  for (let i = 1; i <= amount; i += 1) {\n    let time = delayTime + stepTime * (i - 1);\n\n    createPromise(i, time)\n      .then(() => Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${time}ms`))\n      .catch(() => Notiflix.Notify.success(`❌ Rejected promise ${i} in ${time}ms`));\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","document","querySelector","addEventListener","evt","preventDefault","_target","target","delay","step","amount","delayTime","Number","value","stepTime","countPromises","time","i","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","$parcel$interopDefault","Notify","success","concat","catch","i1","_loop","$ce04d3a99e08e73b$var$buildPromises"],"version":3,"file":"03-promises.14c7c5c6.js.map"}